* * See notes in syntax.lm
  * Search for "TODO" in the files
* KNOWN BUG (or unexpected behavior): block elements that are children of list
  items must always start at the item's internal indetation, even if no empty
  line separates them from the content; this is also true for indented block
  elements. For example:

    * item
    text
      this is not code
        this is an indented code block

    * item
    text
    ###
    this code is not part of the item
    ###

  However think of a scenario like the following:

    * item
    text
    * item
    text
    * item

  Are the 3 items siblings or is each a child of the previous item?

* While parsing the links, prepare a report of their status (links with missing
  id's, duplicated id's...)
* * Automatic table of contents
  * Add a permalink next to headings
* * Isolate the HTML converting code in a proper class, also preparing for
    different converters like Markdown, MediaWiki...
  * Do not escape "&" when used in correct HTML entities?
  * Optionally do further HTML escapes (see Wembler's escape.py script)
* Use class factories to reduce the number of tested regular expressions
  Use a centralized configuration script
* Markdown compatibility mode
* Recognize headings also when indented or children of block elements?
* Add tests
  * Test headerless and contentless source files
  * Test very long and complex files fox maximum recursions (RuntimeError)
* File extension: .lm .lmk
* Documentation
  * Review and update all docstrings
  * When inserting html entities ("&...;"), they must be escaped like html tags
  * Mention dependencies
* * Add methods to traverse/modify the etree object
  * Allow inserting an etree into another one
* Benchmark/compare with other languages/parsers
* Support Python 2.7
  * https://pypi.python.org/pypi/3to2
  * http://python3porting.com/noconv.html
* GUI editor/real-time converter
